/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicineSupplier;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.MedicineInventoryOrganization;
import Business.Organization.MedicineOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicineSupplierWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deekshithav
 */
public class MedicineSupplierJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MedicineSupplierJPanel
     */
    private JPanel userProcessContainer;
    private MedicineOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;

    public MedicineSupplierJPanel(JPanel userProcessContainer, UserAccount account, MedicineOrganization organization,
            Enterprise enterprise, EcoSystem business) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;

        populateWorkQueueTable();

    }

    public void populateWorkQueueTable() {

        DefaultTableModel model = (DefaultTableModel) requestTable.getModel();

        model.setRowCount(0);

        for (WorkRequest work : organization.getWorkQueue().getWorkRequestList()) {
            if (work instanceof MedicineSupplierWorkRequest) {
                MedicineSupplierWorkRequest medicineSupplierWorkRequest = (MedicineSupplierWorkRequest) work;
                Object[] row = new Object[5];
                row[0] = medicineSupplierWorkRequest;
                row[1] = medicineSupplierWorkRequest.getReceiver();
                row[2] = medicineSupplierWorkRequest.getMedicineName();
                // row[3] = medicineSupplierWorkRequest.getMedicine().getQuantity();
                row[3] = medicineSupplierWorkRequest.getQuantityNeeded();

                row[4] = medicineSupplierWorkRequest.getStatus();
                model.addRow(row);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        reqBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Chalkboard SE", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("WELCOME TO REQUEST MEDICINE WORKAREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 43, -1, -1));

        jLabel4.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        jLabel4.setText("MEDICINES REQUESTED");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 103, 170, 30));

        requestTable.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Receiver", "Medicine", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(requestTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 710, 120));

        reqBtn.setBackground(new java.awt.Color(0, 102, 102));
        reqBtn.setFont(new java.awt.Font("Chalkboard SE", 0, 12)); // NOI18N
        reqBtn.setForeground(new java.awt.Color(255, 255, 255));
        reqBtn.setText("CLICK TO CHECK WITH INVENTORY");
        reqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqBtnActionPerformed(evt);
            }
        });
        add(reqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 273, 260, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void reqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqBtnActionPerformed
        int selectedRow = requestTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            MedicineSupplierWorkRequest request = (MedicineSupplierWorkRequest) requestTable.getValueAt(selectedRow, 0);
            if (request.getStatus().equals("Sent")) {
                request.setStatus("Pending");
                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof MedicineInventoryOrganization) {
                        org = organization;
                        break;
                    }
                }
                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    //   userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                populateWorkQueueTable();
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row which is not already completed or pending", "Warning", JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_reqBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton reqBtn;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
